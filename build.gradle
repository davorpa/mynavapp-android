// Top-level build file where you can add configuration options common to all sub-projects/modules.
apply plugin: 'com.github.ben-manes.versions'

buildscript {
    ext.versions = [
        'gradlePlugin': "3.5.3",
        'coverallsPlugin': "2.9.0",

        'minSdk': 19,
        'compileSdk': 29,

        'androidTools': "29.0.3",
        'androidMaterial': "1.1.0",
        'androidxCore' : "1.2.0",
        'androidxAnnotation' : "1.1.0",
        'androidxAppcompat' : "1.1.0",
        'androidxConstraintlayout' : "1.1.3",
        'androidxNavigation' : "2.2.1",
        'androidxLifecycle' : "2.2.0",
        'androidxTestRunner': "1.2.0",
        'androidxTestRules': "1.2.0",
        'androidxTestTruth': "1.2.0",
        'androidxTestJunit': "1.1.1",
        'androidxTestExpresso': "3.2.0",

        'junit': "4.13",
        'hamcrest': "1.3",
        'mockito': "2.28.2",
        'powermock': "2.0.2",
        'robolectric': "4.3.1",

        'release': "1.0.0-SNAPSHOT"
    ]

    ext.deps = [
        'android': [
            'gradlePlugin': "com.android.tools.build:gradle:" + versions.gradlePlugin,
            'material': "com.google.android.material:material:" + versions.androidMaterial
        ],
        'androidx': [
            'core': "androidx.core:core:" + versions.androidxCore,
            'appcompat': "androidx.appcompat:appcompat:" + versions.androidxAppcompat,
            'constraintlayout': "androidx.constraintlayout:constraintlayout:" + versions.androidxConstraintlayout,
            'navigation': [
                'ui': "androidx.navigation:navigation-ui:" + versions.androidxNavigation,
                'fragment': "androidx.navigation:navigation-fragment:" + versions.androidxNavigation
            ],
            'lifecycle': [
                'extensions': "androidx.lifecycle:lifecycle-extensions:" + versions.androidxLifecycle
            ],
            'annotations': "androidx.annotation:annotation:" + versions.androidxAnnotation,
            'test': [
                'runner': "androidx.test:runner:" + versions.androidxTestRunner,
                'rules': "androidx.test:rules:" + versions.androidxTestRules,
                'truth': "androidx.test.ext:truth:" + versions.androidxTestTruth,
                'ext': "androidx.test.ext:junit:" + versions.androidxTestJunit,
                'expresso': [
                    'core': "androidx.test.espresso:espresso-core:" + versions.androidxTestExpresso,
                    'intents': "androidx.test.espresso:espresso-intents:" + versions.androidxTestExpresso
                ]
            ]
        ],
        'lint': [
            'core': "com.android.tools.lint:lint:" + versions.androidTools,
            'api': "com.android.tools.lint:lint-api:" + versions.androidTools,
            'checks': "com.android.tools.lint:lint-checks:" + versions.androidTools,
            'tests': "com.android.tools.lint:lint-tests:" + versions.androidTools
        ],
        'junit': 'junit:junit:' + versions.junit,
        'hamcrest': [
            'core': "org.hamcrest:hamcrest-core:" + versions.hamcrest,
            'library': "org.hamcrest:hamcrest-library:" + versions.hamcrest,
            'integration': "org.hamcrest:hamcrest-integration:" + versions.hamcrest
        ],
        'mockito': [
            // Mockito for unit tests
            'core': "org.mockito:mockito-core:" + versions.mockito,
            // Mockito for Android tests
            'android': "org.mockito:mockito-android:" + versions.mockito
        ],
        'powermock': [
             'junit': "org.powermock:powermock-module-junit4:" + versions.powermock,
             'junitRule': "org.powermock:powermock-module-junit4-rule:" + versions.powermock,
             'mockito': "org.powermock:powermock-api-mockito2:" + versions.powermock,
             'classloading': "org.powermock:powermock-classloading-xstream:" + versions.powermock
        ],
        'robolectric': [
            'core': "org.robolectric:robolectric:" + versions.robolectric,
            'annotations': "org.robolectric:annotations:" + versions.robolectric
        ]
    ]

    repositories {
        mavenCentral()
        google()
        jcenter()
        gradlePluginPortal()
    }

    dependencies {
        classpath "com.android.tools.build:gradle:" + versions.gradlePlugin
        classpath "com.github.ben-manes:gradle-versions-plugin:0.28.0"
        classpath "gradle.plugin.org.kt3k.gradle.plugin:coveralls-gradle-plugin:" + versions.coverallsPlugin

        // NOTE: Do not place your application dependencies here; they belong
        // in the individual module build.gradle files
    }
}

subprojects { project ->
    group = GROUP
    version = VERSION_NAME

    repositories {
        mavenCentral()
        google()
        jcenter()
    }

    //resolve transitive dependency conflicts/duplications
    configurations.all {
        // junit 4.12 -> 4.13
        resolutionStrategy.force rootProject.ext.deps.junit
        // error_prone_annotations 2.2.0 -> 2.3.1
        resolutionStrategy.force "com.google.errorprone:error_prone_annotations:2.3.1"
        // checkerframework 2.5.2 -> 2.3.1
        resolutionStrategy.force "org.checkerframework:compat-qual:2.5.3"
        resolutionStrategy.force "org.checkerframework:checker-qual:2.5.3"
        // animal-sniffer-annotations 1.14 -> 1.17
        resolutionStrategy.force "org.codehaus.mojo:animal-sniffer-annotations:1.17"
        // objenesis 2.6 -> 3.0.1
        resolutionStrategy.force "org.objenesis:objenesis:3.0.1"
    }
}

task clean(type: Delete) {
    delete rootProject.buildDir
}
